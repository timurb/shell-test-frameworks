{"name":"Shell-test-frameworks","tagline":"A list of shell TDD frameworks","body":"Shell test frameworks\r\n=====================\r\n\r\nThis is a list of test frameworks and related tools in pure shell.\r\n\r\nSort order is random.\r\n\r\n#### [Roundup](http://github.com/bmizerany/roundup)\r\n\r\nFeatures:\r\n* test autorunner\r\n* test case fails and aborts on first non-zero exit code\r\n* setup/teardown\r\n* skipping tests\r\n\r\nTest cases:\r\n* coded in spearate functions with naming like `it_.*()` (RSpec-like)\r\n* are searched in files passed as commandline parameters or in a current file with special shebang\r\n\r\nOutput: custom human-readable format.\r\n\r\nInstaller: configure-make-based installer provided.\r\n\r\nCodebase consists of a single file.\r\n\r\n#### [BATS](http://github.com/sstephenson/bats)\r\n\r\nFeatures:\r\n* test autorunner\r\n* test case fails and aborts on first non-zero exit code\r\n* setup/teardown\r\n* helper functions to ease doing several asserts per test case\r\n* no tests skipping (probably can be done by modifying function names)\r\n\r\nTest cases:\r\n* coded in spearate functions with naming like `@test \".*\"()`\r\n* are searched in files passed as commandline parameters or in a current file with special shebang\r\n\r\nOutput: [TAP](http://en.wikipedia.org/wiki/Test_Anything_Protocol) format.\r\n\r\nInstaller: install.sh provided to do installation\r\nCodebase consists of several files\r\n\r\n#### [Sharness](http://github.com/mlafeldt/sharness)\r\n\r\n* assertions are eval-ed\r\n\r\n#### [Shpec](https://github.com/shpec/shpec)\r\n\r\nFeatures:\r\n* test autorunner (RSpec-like): accepts parameter with tests\r\n* describe/it blocks\r\n* various assert functions\r\n* custom matchers supported\r\n* assertions are eval-ed\r\n* stubbing commands\r\n* failing assertion continues evaluation\r\n* no setup/teardown functions\r\n* color output\r\n\r\nTest cases:\r\n* run in the same process\r\n\r\nOutuput: [RSpec](http://en.wikipedia.org/wiki/RSpec)-like format.\r\n\r\nInstaller: installation not needed but can be done via install.sh or a makefile\r\n\r\nCodebase is very small and clear although looks not to be very portable.\r\n\r\n#### [Shunit](http://shunit.sourceforge.net/)\r\n\r\n#### [Shunit2](https://code.google.com/p/shunit2)\r\n\r\nFeatures:\r\n* test autorunner\r\n* various assertXXX functions\r\n* failing assertion produces message but does not abort test case\r\n* setup/teardown\r\n* failing/skipping tests\r\n\r\nTest cases:\r\n* coded in spearate functions with naming like `test.*()`\r\n* are searched in currently loaded plain shell script\r\n\r\nWide range of shells and OSes is supported.\r\n\r\nThis can also be obtained by `apt-get install shunit2` in Ubuntu or searched for various forks/clones on github.\r\n\r\nOutput: custom human-readable format.\r\nCodebase consists of a single file.\r\n\r\n---\r\nSee also [shflags](http://code.google.com/p/shflags/) and [log4sh](https://sites.google.com/a/forestent.com/projects/log4sh)\r\nof the same author which are commandline param processing library and logging library respectively.\r\n\r\n#### [kal-shlib-shunit](https://github.com/vaab/kal-shlib-shunit)\r\n\r\n#### [shell-unittest](http://git.altlinux.org/gears/l/libshell.git?f=libshell/shell-unittest;a=blob) of ALTLinux's libshell\r\n\r\nTest autorunner searches for test cases in a file pointed to by specific function invocation.\r\n\r\nHas very poor documentation.\r\nA part of libshell and not usable without the rest of the library.\r\n\r\nFeatures:\r\n* test autorunner\r\n* various assertXXX functions\r\n* setup/teardown\r\n\r\nTest cases:\r\n* coded in spearate functions with special comment placed after function name: `# UnitTest`\r\n* are searched by a special function invocation from a separate file\r\n\r\nOutput: custom human-readable format.\r\nCodebase for the whole library consists of several files.\r\n\r\nInstaller: make-based installer provided.\r\n\r\n#### [tapper-autoreport](https://github.com/tapper/Tapper-autoreport) \r\n\r\nNot an actually testing framework but a library to easily produce output from your script in [TAP](http://en.wikipedia.org/wiki/Test_Anything_Protocol) format.\r\n\r\nIt seems to carry much legacy stuff in it and I could not actually run it (although I didn't try very hard with it).\r\n\r\nOutput: [TAP](http://en.wikipedia.org/wiki/Test_Anything_Protocol) format.\r\n\r\n#### [testlib.sh](https://gist.github.com/3877539)\r\n\r\n#### [ts](https://github.com/thinkerbot/ts)\r\n\r\n#### [wvtest](https://github.com/apenwarr/wvtest)\r\n\r\nNot an actually testing framework but a library to easily produce output in custom test-result format.\r\n","google":"UA-43321747-1","note":"Don't delete this file! It's used internally to help with page regeneration."}